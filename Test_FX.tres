[gd_resource type="VisualShader" load_steps=12 format=3 uid="uid://dcpbtdpj26ud8"]

[ext_resource type="Texture2D" uid="uid://bkgkbcbpm2qox" path="res://assets/shield.png" id="1_1qrp2"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_lyaox"]
constant = Color(0.866711, 0.518043, 0.118889, 1)

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_cqfwo"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_hekbp"]
input_name = "front_facing"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_cys5r"]

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_2pgsg"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_g3lr4"]
texture = ExtResource("1_1qrp2")

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_stqar"]
constant = Color(0.126544, 0.519103, 0.498453, 1)

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_vgmpo"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_3i0c0"]
output_port_for_preview = 0
constant = 0.7

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_o5bp1"]
default_input_values = [0, false, 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0, 0, 0, 0)]
op_type = 5

[resource]
code = "shader_type spatial;
render_mode cull_disabled;

uniform sampler2D tex_frg_3;



void fragment() {
// Input:12
	bool n_out12p0 = FRONT_FACING;


// ColorConstant:4
	vec4 n_out4p0 = vec4(0.126544, 0.519103, 0.498453, 1.000000);


// Texture2D:3
	vec4 n_out3p0 = texture(tex_frg_3, UV);


// VectorOp:6
	vec4 n_out6p0 = n_out4p0 * n_out3p0;


// ColorConstant:10
	vec4 n_out10p0 = vec4(0.866711, 0.518043, 0.118889, 1.000000);


// VectorOp:11
	vec4 n_out11p0 = n_out3p0 * n_out10p0;


	vec4 n_out9p0;
// Switch:9
	if(n_out12p0)
	{
		n_out9p0 = n_out6p0;
	}
	else
	{
		n_out9p0 = n_out11p0;
	}


// VectorOp:13
	vec3 n_out13p0 = vec3(n_out6p0.xyz) + vec3(n_out11p0.xyz);


// VectorDecompose:14
	float n_out14p0 = vec4(n_out13p0, 0.0).x;
	float n_out14p1 = vec4(n_out13p0, 0.0).y;
	float n_out14p2 = vec4(n_out13p0, 0.0).z;
	float n_out14p3 = vec4(n_out13p0, 0.0).w;


// Output:0
	ALBEDO = vec3(n_out9p0.xyz);
	ALPHA = n_out14p2;


}
"
graph_offset = Vector2(117.604, -251.458)
modes/cull = 2
nodes/fragment/0/position = Vector2(1060, -320)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_g3lr4")
nodes/fragment/3/position = Vector2(80, -200)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorConstant_stqar")
nodes/fragment/4/position = Vector2(140, -360)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorOp_vgmpo")
nodes/fragment/6/position = Vector2(460, -240)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatConstant_3i0c0")
nodes/fragment/7/position = Vector2(820, 80)
nodes/fragment/9/node = SubResource("VisualShaderNodeSwitch_o5bp1")
nodes/fragment/9/position = Vector2(840, -360)
nodes/fragment/10/node = SubResource("VisualShaderNodeColorConstant_lyaox")
nodes/fragment/10/position = Vector2(200, 140)
nodes/fragment/11/node = SubResource("VisualShaderNodeVectorOp_cqfwo")
nodes/fragment/11/position = Vector2(460, -60)
nodes/fragment/12/node = SubResource("VisualShaderNodeInput_hekbp")
nodes/fragment/12/position = Vector2(420, -360)
nodes/fragment/13/node = SubResource("VisualShaderNodeVectorOp_cys5r")
nodes/fragment/13/position = Vector2(660, -60)
nodes/fragment/14/node = SubResource("VisualShaderNodeVectorDecompose_2pgsg")
nodes/fragment/14/position = Vector2(820, -200)
nodes/fragment/connections = PackedInt32Array(3, 0, 6, 1, 4, 0, 6, 0, 10, 0, 11, 1, 3, 0, 11, 0, 9, 0, 0, 0, 12, 0, 9, 0, 6, 0, 13, 0, 11, 0, 13, 1, 13, 0, 14, 0, 6, 0, 9, 1, 11, 0, 9, 2, 14, 2, 0, 1)
